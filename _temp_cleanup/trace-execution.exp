#!/usr/bin/expect -f

set timeout 30

spawn ssh -o StrictHostKeyChecking=no -o PreferredAuthentications=password -o PubkeyAuthentication=no root@31.97.28.231

expect "*assword*"
send "62uDLW4RJ9ae28EPVfp5yzT##\r"
expect "*#*"

send "cd /root/eon\r"
expect "*#*"

puts "🔍 ADICIONANDO ALERTS PARA RASTREAR ONDE PARA..."

# Verificar o useEffect que deveria executar o código
send "grep -n -A 20 'useEffect.*\\[\\]' ./client/src/pages/OperationsPage.tsx\r"
expect "*#*"

puts "🚨 ADICIONANDO ALERT NO INÍCIO DO useEffect..."

# Encontrar o useEffect e adicionar alert no início
send "sed -i '/useEffect(() => {/a\\    alert(\"🟢 useEffect INICIADO!\");' ./client/src/pages/OperationsPage.tsx\r"
expect "*#*"

puts "🚨 ADICIONANDO ALERT ANTES DO processOAuthCallback..."

# Adicionar alert antes de processOAuthCallback
send "sed -i '/const processOAuthCallback/i\\    alert(\"🟡 Chegou até processOAuthCallback!\");' ./client/src/pages/OperationsPage.tsx\r"
expect "*#*"

puts "🚨 ADICIONANDO ALERT DEPOIS DO processOAuthCallback..."

# Adicionar alert depois do try/catch do OAuth
send "sed -i '/console.log.*Carregando configurações iniciais/i\\    alert(\"🟠 Passou do OAuth, vai carregar configurações!\");' ./client/src/pages/OperationsPage.tsx\r"
expect "*#*"

puts "🏗️ BUILD COM RASTREAMENTO COMPLETO..."
send "cd client && npm run build\r"
expect {
    "*build folder is ready*" {
        puts "✅ Build OK"
    }
    "*compiled successfully*" {
        puts "✅ Build OK"
    }
    timeout {
        puts "⏰ Building..."
    }
}
expect "*#*"

send "cd /root/eon && pm2 restart all\r"
expect "*#*"

puts ""
puts "🔍 RASTREAMENTO ATIVADO!"
puts "========================"
puts ""
puts "🧪 TESTE E VEJA QUAL ALERT APARECE:"
puts "   🟢 'useEffect INICIADO!' → useEffect executa"
puts "   🟡 'Chegou até processOAuthCallback!' → Chegou até OAuth"
puts "   🟠 'Passou do OAuth, vai carregar configurações!' → OAuth OK"
puts "   🔥 'PRESTES A CHAMAR loadAvailableBots!' → Vai chamar função"
puts ""
puts "❓ Onde parar = onde está o problema!"

interact