#!/usr/bin/expect -f

set timeout 120

spawn ssh -o StrictHostKeyChecking=no -o PreferredAuthentications=password -o PubkeyAuthentication=no root@31.97.28.231

expect "*assword*"
send "62uDLW4RJ9ae28EPVfp5yzT##\r"
expect "*#*"

send "cd /root/eon\r"
expect "*#*"

puts "🔧 CORRIGINDO PROBLEMA DOS BOTS NÃO CARREGAREM..."

# Verificar código atual
puts "📋 Código atual (linhas 98-110):"
send "sed -n '98,110p' ./client/src/pages/OperationsPage.tsx\r"
expect "*#*"

puts "🔧 Aplicando correção para acessar response.data.bots..."

# Corrigir a linha que acessa os dados dos bots
send "sed -i '102s/Array.isArray(response.data) ? response.data : \\[\\]/Array.isArray(response.data.bots) ? response.data.bots : []/' ./client/src/pages/OperationsPage.tsx\r"
expect "*#*"

puts "✅ Verificando correção aplicada:"
send "sed -n '98,110p' ./client/src/pages/OperationsPage.tsx\r"
expect "*#*"

puts "🏗️ Fazendo build do cliente..."
send "cd client\r"
expect "*#*"

send "npm run build\r"
expect {
    "*build folder is ready*" {
        puts "✅ Build concluído!"
    }
    "*compiled successfully*" {
        puts "✅ Build concluído!"
    }
    timeout {
        puts "⏰ Build em andamento..."
    }
}
expect "*#*"

puts "🔄 Reiniciando PM2..."
send "cd /root/eon && pm2 restart all\r"
expect "*#*"

send "pm2 status\r"
expect "*#*"

puts ""
puts "🎉 CORREÇÃO DOS BOTS APLICADA!"
puts "=============================="
puts "✅ Frontend agora acessa response.data.bots"
puts "✅ Build e restart concluídos"
puts ""
puts "🧪 TESTE AGORA:"
puts "   https://iaeon.site/operations"
puts "   Login: cliente@iaeon.com / 123456"
puts "   Conecte o Deriv e verifique se os bots aparecem!"

send "exit\r"
expect eof