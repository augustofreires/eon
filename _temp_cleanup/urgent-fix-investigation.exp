#!/usr/bin/expect -f

set timeout 30
spawn ssh -o PreferredAuthentications=password -o PubkeyAuthentication=no root@31.97.28.231

expect {
    "password:" {
        send "62uDLW4RJ9ae28EPVfp5yzT##\r"
        expect "root@"
    }
}

# Navigate to project and check status
send "cd /root/eon && pwd\r"
expect "root@"

send "echo '=== CURRENT PROJECT STATUS ==='\r"
expect "root@"

send "ls -la | grep -E '(client|server)'\r"
expect "root@"

# Check if build exists and when it was created
send "echo '=== BUILD STATUS ==='\r"
expect "root@"

send "ls -la client/build/ 2>/dev/null && echo 'Build exists' || echo 'No build found'\r"
expect "root@"

# Check the main bundle files
send "echo '=== CHECKING BUNDLE FILES ==='\r"
expect "root@"

send "find client/build/static/js -name '*.js' | head -3 | xargs ls -la\r"
expect "root@"

# Check if our specific fixes are in the bundle
send "echo '=== CHECKING FOR OUR FIXES IN BUNDLE ==='\r"
expect "root@"

send "grep -r 'updateUser.*accounts' client/build/static/js/ | wc -l\r"
expect "root@"

send "grep -r 'DerivWebSocketService' client/build/static/js/ | wc -l\r"
expect "root@"

# Check PM2 status
send "echo '=== PM2 STATUS ==='\r"
expect "root@"

send "pm2 status\r"
expect "root@"

# Check nginx status
send "echo '=== NGINX STATUS ==='\r"
expect "root@"

send "systemctl is-active nginx\r"
expect "root@"

# Test backend API
send "echo '=== TESTING BACKEND API ==='\r"
expect "root@"

send "curl -s http://localhost:3001/api/test | head -1\r"
expect "root@"

# Check recent backend logs
send "echo '=== RECENT BACKEND LOGS ==='\r"
expect "root@"

send "pm2 logs eon-backend --lines 10 --nostream\r"
expect "root@"

# Now start real-time monitoring
send "echo '=== STARTING REAL-TIME LOG MONITORING ==='\r"
expect "root@"

send "echo 'Ready for account switching test. Please switch accounts in the browser now.'\r"
expect "root@"

send "pm2 logs eon-backend --lines 0 --raw\r"

# Keep the session interactive for real-time monitoring
interact