#!/usr/bin/expect -f

set timeout 30

spawn ssh root@31.97.28.231

expect {
    "Enter passphrase for key" {
        send "\r"
        exp_continue
    }
    "password:" {
        send "62uDLW4RJ9ae28EPVfp5yzT##\r"
    }
    timeout {
        puts "Connection timeout"
        exit 1
    }
}

expect "root@"

# Verificar schema atual
send "echo 'üìä Verificando schema da tabela bots...'\r"
expect "root@"

send "sudo -u postgres psql -d eon_pro -c '\\d bots'\r"
expect "root@"

send "echo 'üìã Verificando dados atuais...'\r"
expect "root@"

send "sudo -u postgres psql -d eon_pro -c 'SELECT COUNT(*) as total_bots FROM bots;'\r"
expect "root@"

# Adicionar coluna description se n√£o existir
send "echo '‚úÖ Adicionando coluna description...'\r"
expect "root@"

send "sudo -u postgres psql -d eon_pro -c 'ALTER TABLE bots ADD COLUMN IF NOT EXISTS description TEXT;'\r"
expect "root@"

# Inserir Bot Martingale
send "echo 'ü§ñ Inserindo Bot Martingale...'\r"
expect "root@"

send "sudo -u postgres psql -d eon_pro -c \"INSERT INTO bots (name, description, xml_content, xml_filename, is_active, created_by) SELECT 'Bot Martingale', 'Bot avan√ßado com estrat√©gia Martingale para opera√ß√µes automatizadas. Aumenta progressivamente o valor das apostas ap√≥s perdas para recuperar rapidamente.', '<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><xml xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><block type=\\\"trade\\\" id=\\\"1\\\"><field name=\\\"MARKET\\\">synthetic_indices</field><field name=\\\"TRADETYPE\\\">callput</field><field name=\\\"CONTRACT_TYPE\\\">rise_fall</field></block></xml>', 'bot-martingale.xml', true, 1 WHERE NOT EXISTS (SELECT 1 FROM bots WHERE name = 'Bot Martingale');\"\r"
expect "root@"

# Inserir Bot Max Take
send "echo 'ü§ñ Inserindo Bot Max Take...'\r"
expect "root@"

send "sudo -u postgres psql -d eon_pro -c \"INSERT INTO bots (name, description, xml_content, xml_filename, is_active, created_by) SELECT 'Bot Max Take', 'Bot inteligente com gest√£o de risco avan√ßada. Utiliza estrat√©gia de take profit m√°ximo para otimizar ganhos e minimizar perdas em opera√ß√µes de trading.', '<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><xml xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><block type=\\\"trade\\\" id=\\\"2\\\"><field name=\\\"MARKET\\\">synthetic_indices</field><field name=\\\"TRADETYPE\\\">callput</field><field name=\\\"CONTRACT_TYPE\\\">higher_lower</field></block></xml>', 'bot-max-take.xml', true, 1 WHERE NOT EXISTS (SELECT 1 FROM bots WHERE name = 'Bot Max Take');\"\r"
expect "root@"

# Inserir Bot cc
send "echo 'ü§ñ Inserindo Bot cc...'\r"
expect "root@"

send "sudo -u postgres psql -d eon_pro -c \"INSERT INTO bots (name, description, xml_content, xml_filename, is_active, created_by) SELECT 'cc', 'Bot personalizado com algoritmos de an√°lise t√©cnica. Executa opera√ß√µes baseadas em indicadores customizados para maximizar precis√£o nas entradas.', '<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><xml xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><block type=\\\"trade\\\" id=\\\"3\\\"><field name=\\\"MARKET\\\">synthetic_indices</field><field name=\\\"TRADETYPE\\\">callput</field><field name=\\\"CONTRACT_TYPE\\\">touch_notouch</field></block></xml>', 'bot-cc.xml', true, 1 WHERE NOT EXISTS (SELECT 1 FROM bots WHERE name = 'cc');\"\r"
expect "root@"

# Verificar bots inseridos
send "echo '‚úÖ Verificando bots inseridos...'\r"
expect "root@"

send "sudo -u postgres psql -d eon_pro -c 'SELECT id, name, description, is_active FROM bots ORDER BY id;'\r"
expect "root@"

# Reiniciar PM2
send "echo 'üîÑ Reiniciando PM2...'\r"
expect "root@"

send "cd /root/eon && pm2 restart all\r"
expect "root@"

# Testar API
send "echo 'üåê Testando API endpoint...'\r"
expect "root@"

send "sleep 3 && curl -s http://localhost:3000/api/bots | head -200\r"
expect "root@"

send "echo 'üìä Status PM2:'\r"
expect "root@"

send "pm2 status\r"
expect "root@"

send "exit\r"
expect eof