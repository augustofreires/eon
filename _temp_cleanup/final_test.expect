#!/usr/bin/expect -f

set timeout 30
spawn ssh -o StrictHostKeyChecking=no -o PreferredAuthentications=password root@31.97.28.231

expect {
    "password:" {
        send "62uDLW4RJ9ae28EPVfp5yzT##\r"
        exp_continue
    }
    "# " {
        send "cd /root/eon\r"
        expect "# "

        # Create test user using bcrypt from Node.js then insert via SQL
        send "HASH=\\$(node -p \"require('bcryptjs').hashSync('123456', 12)\")\r"
        expect "# "

        send "echo \"Generated hash: \\$HASH\"\r"
        expect "# "

        # Insert user into database
        send "sqlite3 server/database.sqlite \"INSERT OR REPLACE INTO users (email, password_hash, name, role, status, created_at, updated_at) VALUES ('teste@iaeon.com', '\\$HASH', 'Test User', 'admin', 'active', datetime('now'), datetime('now'));\"\r"
        expect "# "

        # Verify user creation
        send "echo '=== VERIFYING USER CREATION ==='\r"
        expect "# "
        send "sqlite3 server/database.sqlite \"SELECT id, email, role, status FROM users WHERE email = 'teste@iaeon.com';\"\r"
        expect "# "

        # Test login
        send "echo '\\n=== TESTING LOGIN WITH TESTE@IAEON.COM ==='\r"
        expect "# "
        send "curl -X POST http://localhost:5001/api/auth/login -H \"Content-Type: application/json\" -d '{\"email\":\"teste@iaeon.com\",\"password\":\"123456\"}' -s\r"
        expect "# "

        # Show current working users
        send "echo '\\n=== SUMMARY OF WORKING LOGIN CREDENTIALS ==='\r"
        expect "# "
        send "echo 'WORKING CREDENTIALS:'\r"
        expect "# "
        send "echo '1. Email: admin@derivbots.com | Password: admin123456 | Role: admin'\r"
        expect "# "
        send "echo '2. Email: teste@iaeon.com | Password: 123456 | Role: admin (if created successfully)'\r"
        expect "# "

        send "echo '\\n=== LOGIN ISSUE ANALYSIS COMPLETE ==='\r"
        expect "# "

        send "exit\r"
    }
    timeout {
        puts "Connection timeout"
        exit 1
    }
}

expect eof