#!/usr/bin/expect -f

set timeout 300

# Upload the corrected file
puts "üîß Uploading corrected useDerivOperations.ts..."
spawn scp -o PasswordAuthentication=yes -o PubkeyAuthentication=no "/Users/augustofreires/Desktop/Bots deriv/client/src/hooks/useDerivOperations.ts" root@31.97.28.231:/root/eon/client/src/hooks/

expect {
    "password:" {
        send "62uDLW4RJ9ae28EPVfp5yzT##\r"
        exp_continue
    }
    "100%" {
        puts "‚úÖ Corrected useDerivOperations.ts uploaded successfully"
    }
    eof {}
}

wait

# Now rebuild and deploy
spawn ssh -o PasswordAuthentication=yes -o PubkeyAuthentication=no root@31.97.28.231

expect "password:"
send "62uDLW4RJ9ae28EPVfp5yzT##\r"

expect "# "

puts "\nüî® REBUILDING WITH TYPESCRIPT FIX..."

send "cd /root/eon/client\r"
expect "# "

# Clean previous build attempt
send "rm -rf build/ node_modules/.cache/\r"
expect "# "

# Build with fixed TypeScript
puts "Starting corrected build..."
send "npm run build 2>&1\r"

expect {
    "webpack compiled with" {
        puts "‚úÖ Build successful!"
        exp_continue
    }
    "Compiled successfully" {
        puts "‚úÖ Compilation successful!"
        exp_continue
    }
    "ERROR in" {
        puts "‚ùå Still has build errors"
        exp_continue
    }
    "Failed to compile" {
        puts "‚ùå Build failed"
        exp_continue
    }
    "# " {
        puts "Build process completed"
    }
    timeout {
        puts "‚ö†Ô∏è Build timeout"
    }
}

puts "\nüöÄ DEPLOYING CORRECTED BUILD..."

# Check if build was successful
send "ls -la build/\r"
expect "# "

# Deploy only if build exists and has content
send "if \[ -d 'build' \] && \[ \"\$(ls -A build)\" \]; then echo 'BUILD_EXISTS'; else echo 'BUILD_MISSING'; fi\r"
expect {
    "BUILD_EXISTS" {
        puts "‚úÖ Build directory exists, deploying..."

        # Deploy to web root
        send "rm -rf /var/www/html/*\r"
        expect "# "

        send "cp -r build/* /var/www/html/\r"
        expect "# "

        send "chown -R www-data:www-data /var/www/html/\r"
        expect "# "

        puts "‚úÖ Deployment successful!"
    }
    "BUILD_MISSING" {
        puts "‚ùå Build failed - no files to deploy"
    }
}

# Restart services regardless
puts "\nüîÑ RESTARTING SERVICES..."

send "pm2 restart all\r"
expect "# "

send "systemctl reload nginx\r"
expect "# "

puts "\nüîç VERIFYING FINAL DEPLOYMENT..."

send "ls -la /var/www/html/\r"
expect "# "

send "curl -s -o /dev/null -w 'HTTP Status: %{http_code}' http://localhost/\r"
expect "# "

puts "\nüéØ FINAL DEPLOYMENT STATUS:"
send "if \[ -f '/var/www/html/index.html' \]; then echo 'DEPLOYMENT SUCCESS'; else echo 'DEPLOYMENT FAILED'; fi\r"
expect "# "

send "exit\r"
expect eof

puts "üèÅ CRITICAL FIX DEPLOYMENT COMPLETED!"