#!/usr/bin/expect -f

set timeout 300
set password "62uDLW4RJ9ae28EPVfp5yzT##"

puts "🚀 Executando correções OAuth na VPS..."

spawn ssh -o StrictHostKeyChecking=no -o PreferredAuthentications=password -o PubkeyAuthentication=no root@31.97.28.231

expect {
    "*assword*" {
        send "$password\r"
        expect "*#*"

        send "cd /root/eon\r"
        expect "*#*"

        puts "💾 Fazendo backup..."
        send "cp ./client/src/contexts/AuthContext.tsx /tmp/AuthContext.tsx.backup-\$(date +%Y%m%d-%H%M%S)\r"
        expect "*#*"

        send "cp ./client/src/components/DerivAccountPanel.tsx /tmp/DerivAccountPanel.tsx.backup-\$(date +%Y%m%d-%H%M%S)\r"
        expect "*#*"

        send "cp ./client/src/pages/OperationsPage.tsx /tmp/OperationsPage.tsx.backup-\$(date +%Y%m%d-%H%M%S)\r"
        expect "*#*"

        puts "🔧 Corrigindo AuthContext.tsx..."
        send "sed -i 's/switchAccount: (account: DerivAccount) => Promise<void>;/switchAccount: (account: DerivAccount, manual?: boolean) => Promise<void>;/' ./client/src/contexts/AuthContext.tsx\r"
        expect "*#*"

        send "sed -i 's/const switchAccount = async (account: DerivAccount) => {/const switchAccount = async (account: DerivAccount, manual: boolean = false) => {/' ./client/src/contexts/AuthContext.tsx\r"
        expect "*#*"

        puts "🔧 Corrigindo DerivAccountPanel.tsx..."
        send "sed -i 's/await switchAccount(account);/await switchAccount(account, true);/' ./client/src/components/DerivAccountPanel.tsx\r"
        expect "*#*"

        puts "🔧 Corrigindo OperationsPage.tsx..."
        send "sed -i '/fetchAccounts.*oauth-callback/c\\        console.log(\"ℹ️ OAuth processado, contas serão carregadas automaticamente pelo AuthContext\");' ./client/src/pages/OperationsPage.tsx\r"
        expect "*#*"

        puts "🏗️ Fazendo build..."
        send "cd client\r"
        expect "*#*"

        send "npm run build\r"
        expect {
            "*build folder is ready*" {
                puts "✅ Build concluído!"
                expect "*#*"
            }
            "*compiled successfully*" {
                puts "✅ Build concluído!"
                expect "*#*"
            }
            timeout {
                puts "⏰ Build em andamento..."
                expect "*#*"
            }
        }

        puts "🔄 Reiniciando PM2..."
        send "cd /root/eon\r"
        expect "*#*"

        send "pm2 restart all\r"
        expect "*#*"

        send "pm2 status\r"
        expect "*#*"

        puts "🎉 DEPLOY CONCLUÍDO!"
        puts "🧪 Teste agora: https://iaeon.site/operations"
        puts "👤 Login: cliente@iaeon.com / 123456"

        send "exit\r"
    }
    timeout {
        puts "❌ Timeout"
        exit 1
    }
}

puts "✅ Correções OAuth aplicadas com sucesso!"