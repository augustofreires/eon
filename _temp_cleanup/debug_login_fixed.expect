#!/usr/bin/expect -f

set timeout 30
spawn ssh -o StrictHostKeyChecking=no -o PreferredAuthentications=password root@31.97.28.231

expect {
    "password:" {
        send "62uDLW4RJ9ae28EPVfp5yzT##\r"
        exp_continue
    }
    "# " {
        # Check PM2 status and logs
        send "echo '=== PM2 LOGS ==='\r"
        expect "# "
        send "pm2 logs iaeon-server --lines 20 --nostream\r"
        expect "# "

        # Check environment variables
        send "echo '\\n=== CHECKING ENVIRONMENT VARIABLES ==='\r"
        expect "# "
        send "cd /root/eon && cat .env | head -10\r"
        expect "# "

        # Check PostgreSQL connection with environment
        send "echo '\\n=== CHECKING POSTGRESQL CONNECTION ==='\r"
        expect "# "
        send "cd /root/eon && source .env && echo \"DATABASE_URL: \\$DATABASE_URL\" && psql \"\\$DATABASE_URL\" -c \"SELECT email, password_hash, role, status FROM users WHERE email = 'teste@iaeon.com';\"\r"
        expect "# "

        # Create a test script to debug bcrypt comparison
        send "echo '\\n=== CREATING BCRYPT TEST SCRIPT ==='\r"
        expect "# "
        send "cat > /tmp/test_bcrypt.js << 'EOF'
const bcrypt = require('bcryptjs');

const testPassword = '123456';

// Test multiple possible hashes
const hashes = [
  '\\$2a\\$12\\$kHqQ.VfJvQc9wjrECPKlieWP1vYVKxgXlFrH2vlKbVhxJqKuBb7N.',
  '\\$2b\\$12\\$kHqQ.VfJvQc9wjrECPKlieWP1vYVKxgXlFrH2vlKbVhxJqKuBb7N.',
  '\\$2y\\$12\\$kHqQ.VfJvQc9wjrECPKlieWP1vYVKxgXlFrH2vlKbVhxJqKuBb7N.'
];

console.log('Testing bcrypt comparison with multiple hash formats:');
console.log('Password to test:', testPassword);

hashes.forEach(async (hash, index) => {
  console.log(`\\nTest ${index + 1}:`);
  console.log('Hash:', hash);

  try {
    const isValid = await bcrypt.compare(testPassword, hash);
    console.log('Result:', isValid ? '✅ MATCH' : '❌ NO MATCH');
  } catch (err) {
    console.error('Error:', err.message);
  }
});

// Test with a fresh hash
console.log('\\n=== Creating fresh hash for comparison ===');
bcrypt.hash(testPassword, 12).then(newHash => {
  console.log('New hash:', newHash);
  return bcrypt.compare(testPassword, newHash);
}).then(result => {
  console.log('Fresh hash comparison:', result ? '✅ MATCH' : '❌ NO MATCH');
}).catch(err => {
  console.error('Error creating fresh hash:', err);
});
EOF\r"
        expect "# "

        # Run the bcrypt test
        send "echo '\\n=== RUNNING BCRYPT TEST ==='\r"
        expect "# "
        send "cd /root/eon && node /tmp/test_bcrypt.js\r"
        expect "# "

        # Sleep to let async operations complete
        send "sleep 2\r"
        expect "# "

        # Test database query directly
        send "echo '\\n=== TESTING DATABASE QUERY DIRECTLY ==='\r"
        expect "# "
        send "cat > /tmp/test_db_query.js << 'EOF'
require('dotenv').config();
const bcrypt = require('bcryptjs');

async function testQuery() {
  try {
    const { query } = require('/root/eon/server/database/connection');

    const result = await query(
      \"SELECT id, email, password_hash, name, role, status FROM users WHERE email = \\$1\",
      ['teste@iaeon.com']
    );

    console.log('=== DATABASE QUERY RESULT ===');
    console.log('Rows found:', result.rows.length);

    if (result.rows.length > 0) {
      const user = result.rows[0];
      console.log('User data:');
      console.log('- ID:', user.id);
      console.log('- Email:', user.email);
      console.log('- Name:', user.name);
      console.log('- Role:', user.role);
      console.log('- Status:', user.status);
      console.log('- Password hash length:', user.password_hash ? user.password_hash.length : 0);
      console.log('- Password hash preview:', user.password_hash ? user.password_hash.substring(0, 30) + '...' : 'null');

      // Test bcrypt with actual hash from database
      console.log('\\n=== TESTING BCRYPT WITH DATABASE HASH ===');
      const testPassword = '123456';

      console.log('Testing password:', testPassword);
      console.log('Against hash from DB...');

      const isValidPassword = await bcrypt.compare(testPassword, user.password_hash);
      console.log('Bcrypt result:', isValidPassword ? '✅ VALID PASSWORD' : '❌ INVALID PASSWORD');

    } else {
      console.log('❌ No user found with email teste@iaeon.com');
    }
  } catch (error) {
    console.error('❌ Error:', error.message);
    console.error('Full error:', error);
  }
  process.exit(0);
}

testQuery();
EOF\r"
        expect "# "

        send "echo '\\n=== RUNNING DATABASE QUERY TEST ==='\r"
        expect "# "
        send "cd /root/eon && node /tmp/test_db_query.js\r"
        expect "# "

        send "exit\r"
    }
    timeout {
        puts "Connection timeout"
        exit 1
    }
}

expect eof