#!/usr/bin/expect -f

set timeout 120

spawn ssh -o PasswordAuthentication=yes -o PubkeyAuthentication=no root@31.97.28.231

expect "password:"
send "62uDLW4RJ9ae28EPVfp5yzT##\r"

expect "# "

puts "\n=== CRITICAL DEPLOYMENT - UPLOADING FIXED FILES ==="

# Create temporary directory for file transfer
send "mkdir -p /tmp/critical-fixes\r"
expect "# "

puts "\n=== Step 1: Creating backup of current files ==="
send "cp /root/eon/client/src/services/DerivWebSocketService.ts /tmp/DerivWebSocketService.ts.backup\r"
expect "# "

send "cp /root/eon/client/src/hooks/useDerivOperations.ts /tmp/useDerivOperations.ts.backup\r"
expect "# "

send "cp /root/eon/client/src/contexts/AuthContext.tsx /tmp/AuthContext.tsx.backup\r"
expect "# "

puts "\n=== Step 2: Waiting for file uploads via separate process... ==="
puts "    [This script will pause here while files are uploaded]"

# Create a marker file to indicate when uploads are complete
send "echo 'waiting_for_uploads' > /tmp/upload_status\r"
expect "# "

# Wait for uploads to complete (marker file will be updated by upload process)
send "while \[ -f /tmp/upload_status \]; do echo 'Waiting for file uploads...'; sleep 2; done\r"
expect "# "

puts "\n=== Step 3: Building frontend with new fixes ==="
send "cd /root/eon/client\r"
expect "# "

send "npm run build\r"
expect {
    "webpack compiled" {
        puts "✅ Frontend build successful"
    }
    "error" {
        puts "❌ Build error detected"
        exp_continue
    }
    "# " {
        puts "Build completed"
    }
    timeout {
        puts "⚠️ Build timeout - checking status"
    }
}

puts "\n=== Step 4: Deploying built files to web root ==="
send "rm -rf /var/www/html/*\r"
expect "# "

send "cp -r /root/eon/client/build/* /var/www/html/\r"
expect "# "

send "chown -R www-data:www-data /var/www/html/\r"
expect "# "

puts "\n=== Step 5: Restarting services ==="
send "pm2 restart all\r"
expect "# "

send "systemctl reload nginx\r"
expect "# "

puts "\n=== Step 6: Verifying deployment ==="
send "ls -la /var/www/html/\r"
expect "# "

send "curl -s -o /dev/null -w '%{http_code}' http://localhost/\r"
expect "# "

puts "\n=== CRITICAL DEPLOYMENT COMPLETE ==="

send "exit\r"
expect eof