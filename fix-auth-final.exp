#!/usr/bin/expect -f

set timeout 30

spawn ssh -o StrictHostKeyChecking=no -o PreferredAuthentications=password -o PubkeyAuthentication=no root@31.97.28.231

expect "*assword*"
send "62uDLW4RJ9ae28EPVfp5yzT##\r"
expect "*#*"

send "cd /root/eon\r"
expect "*#*"

puts "游댢 CORRE칂츾O FINAL POSTGRESQL..."

# 1. Configurar PostgreSQL para trust
puts "1. Configurando PostgreSQL trust..."
send "sudo sed -i 's/local.*all.*postgres.*peer/local all postgres trust/' /etc/postgresql/16/main/pg_hba.conf\r"
expect "*#*"

send "sudo systemctl reload postgresql\r"
expect "*#*"

# 2. Criar hash real da senha
puts "2. Gerando hash correto para senha 123456..."
send "node -e \"const bcrypt = require('bcrypt'); bcrypt.hash('123456', 10).then(hash => console.log('HASH:', hash));\"\r"
expect "*#*"

# 3. Atualizar usu치rio no banco
puts "3. Atualizando usu치rio cliente..."
send "sudo -u postgres psql eon_platform -c \"DELETE FROM users WHERE email = 'cliente@iaeon.com';\"\r"
expect "*#*"

send "HASH=\$(node -e \"const bcrypt = require('bcrypt'); bcrypt.hash('123456', 10).then(hash => console.log(hash));\" | tail -1)\r"
expect "*#*"

send "sudo -u postgres psql eon_platform -c \"INSERT INTO users (name, email, password, role) VALUES ('Cliente', 'cliente@iaeon.com', '\$HASH', 'client');\"\r"
expect "*#*"

# 4. Verificar usu치rios
puts "4. Verificando usu치rios..."
send "sudo -u postgres psql eon_platform -c \"SELECT id, email, role FROM users;\"\r"
expect "*#*"

# 5. Reiniciar servidor
puts "5. Reiniciando servidor..."
send "pm2 restart iaeon-server\r"
expect "*#*"

# 6. Aguardar estabiliza칞칚o
send "sleep 5\r"
expect "*#*"

# 7. Testar login
puts "6. Testando login..."
send "curl -X POST http://localhost:5000/api/auth/login -H 'Content-Type: application/json' -d '{\"email\":\"cliente@iaeon.com\",\"password\":\"123456\",\"isAdmin\":false}' -s\r"
expect "*#*"

puts ""
puts "游꿀 CORRE칂츾O POSTGRESQL FINALIZADA!"
puts "游빍 TESTE LOGIN: https://iaeon.site/operations"

interact