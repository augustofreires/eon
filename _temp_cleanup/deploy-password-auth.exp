#!/usr/bin/expect -f

set timeout 60
set password "62uDLW4RJ9ae28EPVfp5yzT##"

puts "🚀 Conectando na VPS com autenticação por senha..."

# Forçar autenticação por senha (não usar chaves SSH)
spawn ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o PreferredAuthentications=password -o PubkeyAuthentication=no root@31.97.28.231

expect {
    "*assword*" {
        send "$password\r"
        expect "*#*"

        puts "✅ Conectado! Executando deploy..."

        # Ir para diretório
        send "cd /var/www/iaeon\r"
        expect "*#*"

        send "pwd\r"
        expect "*#*"

        puts "📁 Diretório confirmado. Iniciando processo..."

        # Fazer backup
        send "mkdir -p /tmp/backup-oauth-\$(date +%Y%m%d-%H%M%S)\r"
        expect "*#*"

        # Usar wget para baixar arquivos do GitHub se necessário, ou criar diretamente
        puts "🔧 Preparando para aplicar correções..."

        # Primeiro vamos ver o que existe
        send "ls -la client/src/contexts/\r"
        expect "*#*"

        send "ls -la client/src/components/\r"
        expect "*#*"

        send "ls -la client/src/pages/\r"
        expect "*#*"

        puts "📋 Estrutura verificada. Pronto para aplicar correções."
        puts "💡 Agora vou aplicar as correções diretamente..."

        # Aplicar correção no AuthContext
        send "cp client/src/contexts/AuthContext.tsx client/src/contexts/AuthContext.tsx.backup\r"
        expect "*#*"

        puts "✅ Backup criado. Mantendo conexão para aplicar correções..."

        # Manter conexão interativa para aplicar as correções
        interact
    }
    "*yes/no*" {
        send "yes\r"
        exp_continue
    }
    "Connection refused" {
        puts "❌ Conexão recusada"
        exit 1
    }
    timeout {
        puts "❌ Timeout na conexão"
        exit 1
    }
}