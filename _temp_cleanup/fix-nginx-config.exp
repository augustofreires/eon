#!/usr/bin/expect -f

set timeout 60
set password "62uDLW4RJ9ae28EPVfp5yzT##"

spawn ssh -o PreferredAuthentications=password -o PubkeyAuthentication=no root@31.97.28.231

expect {
    "password:" {
        send "$password\r"
        exp_continue
    }
    "yes/no" {
        send "yes\r"
        exp_continue
    }
    "root@" {
        # Backup current nginx config
        send "cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.backup\r"
        expect "root@"

        # Create new nginx config for React app
        send "cat > /etc/nginx/sites-available/default << 'NGINXEOF'\r"
        expect ">"

        send "server {\r"
        expect ">"

        send "    listen 80;\r"
        expect ">"

        send "    listen [::]:80;\r"
        expect ">"

        send "    server_name _;\r"
        expect ">"

        send "    root /root/eon/client/build;\r"
        expect ">"

        send "    index index.html index.htm;\r"
        expect ">"

        send "\r"
        expect ">"

        send "    # Handle React Router - serve index.html for all non-file requests\r"
        expect ">"

        send "    location / {\r"
        expect ">"

        send "        try_files \\$uri \\$uri/ /index.html;\r"
        expect ">"

        send "    }\r"
        expect ">"

        send "\r"
        expect ">"

        send "    # API proxy to backend server\r"
        expect ">"

        send "    location /api/ {\r"
        expect ">"

        send "        proxy_pass http://localhost:5000;\r"
        expect ">"

        send "        proxy_set_header Host \\$host;\r"
        expect ">"

        send "        proxy_set_header X-Real-IP \\$remote_addr;\r"
        expect ">"

        send "        proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;\r"
        expect ">"

        send "        proxy_set_header X-Forwarded-Proto \\$scheme;\r"
        expect ">"

        send "    }\r"
        expect ">"

        send "\r"
        expect ">"

        send "    # Static files caching\r"
        expect ">"

        send "    location ~* \\.(js|css|png|jpg|jpeg|gif|ico|svg)\\$ {\r"
        expect ">"

        send "        expires 1y;\r"
        expect ">"

        send "        add_header Cache-Control public;\r"
        expect ">"

        send "        add_header Vary Accept-Encoding;\r"
        expect ">"

        send "        try_files \\$uri =404;\r"
        expect ">"

        send "    }\r"
        expect ">"

        send "}\r"
        expect ">"

        send "NGINXEOF\r"
        expect "root@"

        # Test nginx configuration
        send "nginx -t\r"
        expect "root@"

        # If config is valid, reload nginx
        send "nginx -s reload\r"
        expect "root@"

        # Test the new configuration
        send "curl -I http://localhost/\r"
        expect "root@"

        send "exit\r"
    }
}

expect eof