#!/usr/bin/expect -f

set timeout 30

spawn ssh root@31.97.28.231

expect {
    "Enter passphrase for key" {
        send "\r"
        exp_continue
    }
    "password:" {
        send "62uDLW4RJ9ae28EPVfp5yzT##\r"
    }
    timeout {
        puts "Connection timeout"
        exit 1
    }
}

expect "root@"

send "cd /root/eon\r"
expect "root@"

# Fazer login como admin e obter token
send "echo 'Fazendo login como admin...'\r"
expect "root@"

send "curl -X POST http://localhost:3000/api/auth/login \
  -H 'Content-Type: application/json' \
  -d '{\"email\":\"admin@derivbots.com\",\"password\":\"admin123456\"}' \
  -s | jq -r '.token' > /tmp/admin_token.txt 2>/dev/null || curl -X POST http://localhost:3000/api/auth/login -H 'Content-Type: application/json' -d '{\"email\":\"admin@derivbots.com\",\"password\":\"admin123456\"}' -s > /tmp/admin_response.txt\r"
expect "root@"

# Verificar se conseguiu token
send "echo 'Token obtido:'\r"
expect "root@"

send "cat /tmp/admin_token.txt 2>/dev/null || echo 'Erro no token, resposta completa:' && cat /tmp/admin_response.txt 2>/dev/null\r"
expect "root@"

# Testar API com token se disponível
send "echo 'Testando API com autenticação...'\r"
expect "root@"

send "TOKEN=\\$(cat /tmp/admin_token.txt 2>/dev/null | tr -d '\\n'); if \[ -n \"\\$TOKEN\" \] && \[ \"\\$TOKEN\" != \"null\" \]; then curl -X GET http://localhost:3000/api/bots -H \"Authorization: Bearer \\$TOKEN\" -H 'Content-Type: application/json' -s; else echo 'Token inválido, testando sem auth...'; curl -v http://localhost:3000/api/bots 2>&1 | head -10; fi\r"
expect "root@"

send "exit\r"
expect eof