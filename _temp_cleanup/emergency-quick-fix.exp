#!/usr/bin/expect -f

set timeout 15

spawn ssh -o PasswordAuthentication=yes -o PreferredAuthentications=password root@31.97.28.231

expect "password:"
send "62uDLW4RJ9ae28EPVfp5yzT##\r"
expect "# "

# Quick PostgreSQL check
send "sudo -u postgres psql -d eon_platform -c \"SELECT count(*) FROM users;\" 2>/dev/null || echo 'DB_ERROR'\r"
expect "# "

# If PostgreSQL fails, switch to SQLite temporarily
send "echo '=== EMERGENCY: SWITCH TO SQLITE ==='\r"
expect "# "

# Backup current .env
send "cp /root/eon/.env /root/eon/.env.backup\r"
expect "# "

# Change to SQLite config
send "sed -i 's|DATABASE_URL=postgresql://postgres@localhost:5432/eon_platform|DATABASE_URL=sqlite:/root/eon/database.db|' /root/eon/.env\r"
expect "# "

# Create users table in SQLite
send "sqlite3 /root/eon/database.db 'CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT, username TEXT UNIQUE, email TEXT UNIQUE, password TEXT, created_at DATETIME DEFAULT CURRENT_TIMESTAMP);'\r"
expect "# "

# Add test user
send "sqlite3 /root/eon/database.db \"INSERT OR IGNORE INTO users (username, email, password) VALUES ('admin', 'admin@test.com', '\\$2b\\$10\\$dummyhashfortest');\"\r"
expect "# "

# Restart server
send "pm2 restart eon-pro-server\r"
expect "# "

send "echo 'EMERGENCY FIX APPLIED - CHECK SERVER'\r"
expect "# "

send "exit\r"
expect eof