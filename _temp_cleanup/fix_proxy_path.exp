#!/usr/bin/expect -f

set timeout 30

spawn ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@31.97.28.231

expect {
    "Enter passphrase for key" {
        send "\r"
        expect {
            "password:" {
                send "62uDLW4RJ9ae28EPVfp5yzT##\r"
            }
            "Enter passphrase for key" {
                send "\r"
                expect "password:"
                send "62uDLW4RJ9ae28EPVfp5yzT##\r"
            }
        }
    }
    "password:" {
        send "62uDLW4RJ9ae28EPVfp5yzT##\r"
    }
}

expect "# "

# Check what routes are available on the backend
send "curl -s http://localhost:5000/api/health\r"
expect "# "

# Check if auth route exists
send "curl -s -X POST http://localhost:5000/api/auth/login -H 'Content-Type: application/json' -d '{\"email\":\"cliente@iaeon.com\",\"password\":\"123456\",\"isAdmin\":false}'\r"
expect "# "

# Let's check what happens when we call the route without /api
send "curl -s -X POST http://localhost:5000/auth/login -H 'Content-Type: application/json' -d '{\"email\":\"cliente@iaeon.com\",\"password\":\"123456\",\"isAdmin\":false}'\r"
expect "# "

# Update nginx config to properly preserve the /api path
send "sed -i 's|proxy_pass http://localhost:5000/;|proxy_pass http://localhost:5000;|g' /etc/nginx/sites-available/iaeon.site\r"
expect "# "

# Check the change
send "grep 'proxy_pass.*5000' /etc/nginx/sites-available/iaeon.site\r"
expect "# "

# Test nginx config
send "nginx -t\r"
expect "# "

# Restart nginx
send "systemctl reload nginx\r"
expect "# "

# Test the corrected login
send "curl -X POST https://iaeon.site/api/auth/login -H 'Content-Type: application/json' -d '{\"email\":\"cliente@iaeon.com\",\"password\":\"123456\",\"isAdmin\":false}'\r"
expect "# "

send "exit\r"
expect eof