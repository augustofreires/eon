#!/usr/bin/expect -f

# Script de verificação da correção crítica
set timeout 30
set server_ip "45.56.124.136"
set username "augustofreires"
set password "230106Af!"

log_user 1

puts "🔍 VERIFICAÇÃO: Correção do bug de troca de contas"
puts "=" * 50

# Conectar ao servidor
spawn ssh $username@$server_ip
expect {
    "password:" {
        send "$password\r"
        exp_continue
    }
    "$ " {
        puts "✅ Conectado ao servidor"
    }
    timeout {
        puts "❌ TIMEOUT: Não foi possível conectar"
        exit 1
    }
}

# Verificar se o arquivo foi atualizado
send "cd /root/eonbackend\r"
expect "$ "

puts "\n📋 1. Verificando se correção está presente no código..."
send "grep -n 'Account mismatch' server/routes/auth.js\r"
expect {
    "Account mismatch" {
        puts "✅ Correção encontrada no código"
    }
    "$ " {
        puts "❌ Correção NÃO encontrada - deploy pode ter falhado"
    }
}
expect "$ "

puts "\n📋 2. Verificando status do backend..."
send "pm2 status | grep eon-backend\r"
expect "$ "

puts "\n📋 3. Verificando logs recentes..."
send "pm2 logs eon-backend --lines 5 --nostream\r"
expect "$ "

puts "\n📋 4. Testando endpoint da API..."
send "curl -s -o /dev/null -w '%{http_code}' https://iaeon.site/api/auth/account-info\r"
expect {
    "200" {
        puts "✅ API respondendo corretamente"
    }
    "$ " {
        puts "⚠️  API pode não estar respondendo adequadamente"
    }
}
expect "$ "

puts "\n📋 5. Verificando estrutura da validação..."
send "grep -A 5 -B 5 'authorizedLoginId.*requestedLoginId' server/routes/auth.js\r"
expect {
    "authorizedLoginId" {
        puts "✅ Lógica de validação presente"
    }
    "$ " {
        puts "❌ Lógica de validação não encontrada"
    }
}
expect "$ "

puts "\n" + "=" * 50
puts "🎯 RESUMO DA VERIFICAÇÃO:"
puts "   ✅ Servidor acessível"
puts "   📝 Verificar output acima para detalhes específicos"
puts "   🔧 Se correção não está presente, executar deploy manual"
puts ""
puts "📞 PRÓXIMOS PASSOS:"
puts "   1. Se correção presente: Testar troca de contas no frontend"
puts "   2. Se correção ausente: Executar deploy manual"
puts "   3. Monitorar logs durante testes: pm2 logs eon-backend --follow"
puts ""
puts "🚨 COMANDO DE EMERGÊNCIA (se necessário):"
puts "   pm2 restart eon-backend"

send "exit\r"
expect eof

puts "\n✅ Verificação concluída!"