version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: deriv_bots_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: deriv_bots_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/database/setup.sql:/docker-entrypoint-initdb.d/setup.sql
    ports:
      - "5432:5432"
    networks:
      - deriv_network

  # Redis (para cache e sess√µes)
  redis:
    image: redis:7-alpine
    container_name: deriv_bots_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - deriv_network

  # Backend API
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: deriv_bots_api
    restart: unless-stopped
    ports:
      - "${PORT:-5001}:5001"
    environment:
      NODE_ENV: production
      PORT: 5001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: deriv_bots_prod
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      DERIV_APP_ID: ${DERIV_APP_ID}
      DERIV_OAUTH_CLIENT_ID: ${DERIV_OAUTH_CLIENT_ID}
      DERIV_OAUTH_CLIENT_SECRET: ${DERIV_OAUTH_CLIENT_SECRET}
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - deriv_network
    volumes:
      - ./uploads:/app/uploads

  # Frontend (Nginx)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:5001}
    container_name: deriv_bots_frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    networks:
      - deriv_network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro

volumes:
  postgres_data:
  redis_data:

networks:
  deriv_network:
    driver: bridge