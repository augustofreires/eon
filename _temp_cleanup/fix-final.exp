#!/usr/bin/expect -f

set timeout 120

spawn ssh -o PreferredAuthentications=password -o PubkeyAuthentication=no root@31.97.28.231
expect "password:"
send "62uDLW4RJ9ae28EPVfp5yzT##\r"

expect "root@"
send "cd /root/eon\r"

expect "root@"
send "echo 'ðŸ”„ Corrigindo arquivo...'\r"

expect "root@"
send "cp client/src/services/DerivWebSocketService.bak client/src/services/DerivWebSocketService.ts\r"

expect "root@"
send "sed -i '/export default DerivWebSocketService;/i\\  /**\\   * PADRÃƒO OFICIAL DERIV: Subscribe to balance updates after authorization\\   */\\  private subscribeToBalanceUpdates(): void {\\    console.log(\"ðŸ’° Subscribing to balance updates (official Deriv pattern)...\");\\\\    const request = {\\      balance: 1,\\      subscribe: 1,\\      req_id: this.generateRequestId(\"balance_sub\")\\    };\\\\    this.subscribers.set(\"balance_updates\", {\\      onConnection: (data: any) => {\\        if (data.balance) {\\          console.log(\"ðŸ’° DERIV PATTERN: Balance update received:\", data.balance);\\          this.notifySubscribers(\"onBalance\", {\\            balance: data.balance.balance,\\            currency: data.balance.currency,\\            loginid: data.balance.loginid || this.currentAccount\\          });\\        }\\      }\\    });\\\\    this.send(request);\\    console.log(\"âœ… Balance subscription request sent\");\\  }\\' client/src/services/DerivWebSocketService.ts\r"

expect "root@"
send "sed -i '/this.currentAccount = data.authorize.loginid;/a\\            this.subscribeToBalanceUpdates();' client/src/services/DerivWebSocketService.ts\r"

expect "root@"
send "echo 'ðŸ”§ Building...'\r"

expect "root@"
send "npm run build\r"
expect "Successfully"

send "systemctl reload nginx\r"

expect "root@"
send "echo 'âœ… CORREÃ‡ÃƒO FINAL APLICADA!'\r"

expect "root@"
send "exit\r"

expect eof
puts "ðŸŽ‰ FIX FINAL COMPLETO!"
